[tool.poetry]
name = "paaaaath"
version = "0.2.1"
description = "a useful alternative Path object"
authors = ["Masahiro Wada <argon.argon.argon@gmail.com>"]
license = "MIT"
repository = "https://github.com/ar90n/paaaaath"
readme = "README.md"
keywords = ["path", "s3", "gcs", "cloud"]


[tool.poetry.dependencies]
python = "^3.7"
lambdas = "^0.1.0"
smart-open = "^4.2"

# optional
boto3 = {version = "^1.17.36", optional = true}
google-cloud-storage = {version = "^1.36.2", optional = true}
requests = {version = "^2.25.1", optional = true}
importlib_metadata = {version = "^3.7", python = "~3.7"}

[tool.poetry.extras]
http = [ "requests"]
gcs = [ "google-cloud-storage"]
s3 = [ "boto3"]
all = [ "http", "s3", "gcs"]

[tool.poetry.dev-dependencies]
pytest = "^6.2.2"
pytest-cov = "^2.11.1"
pytest-xdist = "^2.2.1"
pre-commit = "^2.10.1"
pytest-black = "^0.3.12"
pytest-mypy = "^0.8.0"
wemake-python-styleguide = "^0.15.1"
pytest-httpserver = "^0.3.8"
bandit = "^1.7.0"
wait-for-it = "^2.2.0"
boto3 = "^1.17.36"
google-cloud-storage = "^1.36.2"
requests = "^2.25.1"
pysen = "^0.9.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pysen]
version = "0.9"

[tool.pysen.lint]
enable_black = true
enable_flake8 = false
enable_isort = true
enable_mypy = false

[[tool.pysen.lint.mypy_targets]]
paths = ["paaaaath"]

[tool.pysen.lint.source]
excludes = ["tests"]
